name: CI Framework CI

on:
  push:
    branches: [main, master, development]
  pull_request:
    branches: [main, master, development]
  schedule:
    - cron: '0 0 * * *' # Nightly build
  workflow_dispatch:

jobs:
  lint-and-format:
    name: "🧹 Lint & Format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: "Install Python dependencies"
        run: |
          pip install ruff black yamllint actionlint
      - name: "Run Ruff (linting)"
        run: |
          ruff check framework/
      - name: "Run Black (formatting)"
        run: |
          black --check framework/
      - name: "Run Yamllint (workflow YAMLs)"
        run: |
          yamllint .github/workflows/
      - name: "Run Actionlint (workflow syntax)"
        uses: reviewdog/action-actionlint@v1

  security-scan:
    name: "🛡️ Security Scan"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: "Install Python dependencies"
        run: |
          pip install pip-audit bandit detect-secrets
      - name: "Run pip-audit (dependency vulnerabilities)"
        run: |
          pip-audit --verbose
        continue-on-error: true
      - name: "Run Bandit (static analysis)"
        run: |
          bandit -r framework/
        continue-on-error: true
      - name: "Run detect-secrets"
        run: |
          detect-secrets scan --all-files
        continue-on-error: true
      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@v3

  unit-tests:
    name: "🧪 Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: "Install Python dependencies"
        run: |
          pip install pytest
          # Install any dependencies required by the framework scripts themselves
          # For example, if framework/performance/cli.py imports something from framework/performance/models.py
          # and models.py requires pandas, then pandas should be installed here.
          # For now, assuming minimal external dependencies for the framework scripts.
      - name: "Run Unit Tests for Framework Scripts"
        run: |
          pytest framework/tests/

  # Placeholder for more advanced integration tests of reusable workflows
  # This would involve creating a dummy repository and calling the reusable workflows
  # from there, then asserting their behavior.
  # This is a complex setup and is left as a future enhancement.
  integration-tests-reusable-workflows:
    name: "🔗 Reusable Workflow Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Explanation"
        run: |
          echo "This job would contain integration tests for the reusable workflows (reusable-ci.yml, standalone-ci.yml)."
          echo "It would involve setting up a dummy project, calling the reusable workflows, and verifying their end-to-end behavior."
          echo "This is a complex task that often requires a dedicated testing repository or advanced GitHub Actions features."
          echo "For now, manual verification or separate dedicated integration test repositories are recommended."

  summary:
    name: "✅ CI Summary"
    runs-on: ubuntu-latest
    needs: [lint-and-format, security-scan, unit-tests, integration-tests-reusable-workflows]
    if: always()
    steps:
      - name: "Generate Run Summary"
        run: |
          echo "## CI Framework CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & Format | ${{ needs.lint-and-format.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scan | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests | ${{ needs.unit-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Reusable Workflow Integration Tests | ${{ needs.integration-tests-reusable-workflows.result }} |" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.lint-and-format.result }}" == "success" && \
                "${{ needs.security-scan.result }}" == "success" && \
                "${{ needs.unit-tests.result }}" == "success" ]]; then
            echo -e "\n**Overall Status: ✅ Core CI Framework checks passed.**" >> $GITHUB_STEP_SUMMARY
          else
            echo -e "\n**Overall Status: ❌ Some CI Framework checks failed.**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi